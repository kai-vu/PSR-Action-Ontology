@prefix owl:    <http://www.w3.org/2002/07/owl#> .
@prefix soma:   <http://www.ease-crc.org/ont/SOMA.owl#> .
@prefix dul:    <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#> .
@prefix geo:    <http://www.opengis.net/ont/geosparql#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix psr:    <https://w3id.org/psr-task#> .
@prefix :       <https://example.org/data/> .

psr:Instruction a owl:Class, dul:Entity ;
    rdfs:label "Instruction"@en ;
    rdfs:comment "An instruction is a command or directive given to a robot."@en .

psr:Workflow a owl:Class, dul:Entity ;
    rdfs:subClassOf dul:Workflow ;
    rdfs:label "Workflow"@en ;
    rdfs:comment "A workflow is a sequence of tasks or processes that are carried out to fulfil the instruction."@en .

dul:Action a owl:Class, dul:Entity ;
    rdfs:label "Action"@en ;
    rdfs:comment "An action is an atomic, single, clear action that is carried out to fulfil the instruction."@en .

dul:Agent a owl:Class, dul:Entity ;
    rdfs:label "Agent"@en ;
    rdfs:comment "An agent performing an action."@en .

psr:Component a owl:Class, dul:Entity ;
    rdfs:label "Component"@en ;
    rdfs:comment "A component is a part of an environment that can be used to perform tasks or actions."@en .

psr:Appliance a owl:Class, dul:Entity, psr:Component ;
    rdfs:label "Appliance"@en ;
    rdfs:comment "An appliance is a type of component."@en .

psr:Furniture a owl:Class, dul:Entity, psr:Component ;
    rdfs:label "Furniture"@en ;
    rdfs:comment "A furniture is a type of component."@en .

psr:Object a owl:Class, dul:Entity, psr:Component ;
    rdfs:label "Object"@en ;
    rdfs:comment "An object is a type of component."@en .

psr:Affordance a owl:Class, dul:Entity ;
    rdfs:label "Affordance"@en ;
    rdfs:comment "An affordance is a property of an object that indicates how it can be used."@en .

soma:Closing a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Closing"@en ;
    rdfs:comment "Closing is an affordance that enables a component to be closed."@en .

soma:Opening a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Opening"@en ;
    rdfs:comment "Opening is an affordance that enables a component to be opened."@en .

soma:Delivering a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Delivering"@en ;
    rdfs:comment "Delivering is an affordance that enables a component to be delivered."@en .

soma:Holding a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Holding"@en ;
    rdfs:comment "Holding is an affordance that enables a component to be held."@en .

soma:PickingUp a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "PickingUp"@en ;
    rdfs:comment "Picking up is an affordance that enables a component to be picked up."@en .

soma:PuttingDown a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "PuttingDown"@en ;
    rdfs:comment "Putting down is an affordance that enables a component to be put down."@en .

soma:Pulling a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Pulling"@en ;
    rdfs:comment "Pulling is an affordance that enables a component to be pulled."@en .

soma:Pushing a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Pushing"@en ;
    rdfs:comment "Pushing is an affordance that enables a component to be pushed."@en .

soma:Grasping a owl:Class, dul:Entity, psr:Affordance ;
    rdfs:label "Grasping"@en ;
    rdfs:comment "Grasping is an affordance that enables a component to be grasped."@en .

###################################
# OBJECT PROPERTIES
###################################

psr:hasWorkflow a owl:ObjectProperty ;
    rdfs:domain psr:Instruction ;
    rdfs:range psr:Workflow ;
    rdfs:label "has workflow"@en ;
    rdfs:comment "An instruction has a workflow that needs to be executed."@en .

psr:hasAction a owl:ObjectProperty ;
    rdfs:domain psr:Workflow ;
    rdfs:range dul:Action ;
    rdfs:label "has action"@en ;
    rdfs:comment "A workflow has one or multiple clear atomic actions."@en .

psr:precedes a owl:ObjectProperty ;
    rdfs:subPropertyOf dul:precedes ;
    rdfs:domain dul:Action ;
    rdfs:range dul:Action ;
    rdfs:label "precedes" ;
    rdfs:comment "An action can precede another action."@en .

psr:follows a owl:ObjectProperty ;
    rdfs:subPropertyOf dul:follows ;
    rdfs:domain dul:Action ;
    rdfs:range dul:Action ;
    rdfs:label "follow" ;
    rdfs:comment "An action can follow another action."@en .

soma:isPerformedBy a owl:ObjectProperty ;
    rdfs:domain dul:Action ;
    rdfs:range dul:Agent ;
    rdfs:label "is performed by"@en ;
    rdfs:comment "An action is performed by an agent."@en .

psr:actsOn a owl:ObjectProperty ;
    rdfs:domain dul:Action ;
    rdfs:range psr:Component ;
    rdfs:label "acts on"@en ;
    rdfs:comment "An action acts on a component."@en .

psr:isAffordedBy a owl:ObjectProperty ;
    rdfs:domain dul:Action ;
    rdfs:range psr:Affordance ;
    rdfs:label "is afforded by"@en ;
    rdfs:comment "An action is afforded by an affordance."@en .

# Action sequence actions as per environment understanding:

:Action1 a dul:Action ;
    rdfs:label "Pick up misplaced object"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :MisplacedObject ;
    psr:isAffordedBy soma:PickingUp .

:Action2 a dul:Action ;
    rdfs:label "Move object to storage location"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :MisplacedObject ;
    psr:isAffordedBy soma:Holding .

:Action3 a dul:Action ;
    rdfs:label "Put down object in storage"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :MisplacedObject ;
    psr:isAffordedBy soma:PuttingDown .

:Action4 a dul:Action ;
    rdfs:label "Open storage cabinet door"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :StorageDoor ;
    psr:isAffordedBy soma:Opening .

:Action5 a dul:Action ;
    rdfs:label "Close storage cabinet door"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :StorageDoor ;
    psr:isAffordedBy soma:Closing .

:Action6 a dul:Action ;
    rdfs:label "Return stored object to its standard location"@en ;
    psr:isPerformedBy :Robot ;
    psr:actsOn :StandardStorageLocation ;
    psr:isAffordedBy soma:PuttingDown .

# Link order of actions
:Action1 psr:precedes :Action2 ;
:Action2 psr:precedes :Action3 ;
:Action3 psr:precedes :Action4 ;
:Action4 psr:precedes :Action5 ;
:Action5 psr:precedes :Action6 .

# Define entities involved
:Robot a dul:Agent ;
    rdfs:label "Robot"@en .

:MisplacedObject a psr:Object ;
    rdfs:label "Misplaced Item"@en .

:StorageDoor a psr:Furniture ;
    rdfs:label "Kitchen Storage Door"@en .

:StandardStorageLocation a psr:Furniture ;
    rdfs:label "Standard Storage Location"@en .

# The initial environment shows objects misplaced and a storage door open;
# the robot will pick up objects, open/close doors, and return objects to their location